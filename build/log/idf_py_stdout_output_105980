[1/11] Performing build step for 'bootloader'
[1/1] cd /home/nicoor/Projects/WBSS-ESP/build/bootloader/esp-idf/esptool_py && /home/nicoor/.espressif/python_env/idf5.4_py3.13_env/bin/python /home/nicoor/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/nicoor/Projects/WBSS-ESP/build/bootloader/bootloader.bin
Bootloader binary size 0x5210 bytes. 0x2df0 bytes (36%) free.
[2/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/11] Building C object esp-idf/CAN_driver/CMakeFiles/__idf_CAN_driver.dir/CAN_driver.c.obj
[4/11] No install step for 'bootloader'
[5/11] Linking C static library esp-idf/CAN_driver/libCAN_driver.a
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Completed 'bootloader'
[8/11] Generating ld/sections.ld
[9/11] Linking CXX executable sus_hat.elf
[10/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/nicoor/Projects/WBSS-ESP/build/sus_hat.bin
[11/11] cd /home/nicoor/Projects/WBSS-ESP/build/esp-idf/esptool_py && /home/nicoor/.espressif/python_env/idf5.4_py3.13_env/bin/python /home/nicoor/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/nicoor/Projects/WBSS-ESP/build/partition_table/partition-table.bin /home/nicoor/Projects/WBSS-ESP/build/sus_hat.bin
sus_hat.bin binary size 0x349c0 bytes. Smallest app partition is 0x100000 bytes. 0xcb640 bytes (79%) free.
